/*
 * Przemyslaw Malirz
 *
 * dlock.
 */
plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'maven'
    id 'maven-publish'
    id 'jacoco'
    id 'net.researchgate.release' version '2.6.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

subprojects {

    apply plugin: "kotlin"
    apply plugin: "groovy"
    apply plugin: "jacoco"

    project.group = 'com.dlock'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

        testCompile "org.codehaus.groovy:groovy-all:2.5.6"
        testCompile group: 'org.spockframework', name: 'spock-core', version: '1.2-groovy-2.5'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    jacoco {
        toolVersion = "0.8.4"
        reportsDir = file("$buildDir/jacoco")
    }

/*
    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html.destination file("$buildDir/jacoco-report")
        }
    }
*/

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = 0.5
                }
            }

            rule {
                enabled = false
                element = 'CLASS'
                includes = ["$project.group.*"]

                limit {
                    counter = 'LINE'
                    value = 'TOTALCOUNT'
                    maximum = 0.3
                }
            }
        }
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination file("$buildDir/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

